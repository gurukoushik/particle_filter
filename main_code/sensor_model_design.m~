%% script to design sensor model for laser range finder
clear

%% params
max_range = 8183; gauss_sd = 1.0; lambda_short = 1.0;
wt_gauss=1.0; wt_short=1.0; wt_max=1.0; wt_rand=1.0;
truncate_gauss = 3.0;

z_true = 500;
%% prob distribution
z_meas = linspace(0, max_range, 1000);

% Gaussian distribution
if (z_meas > max_range) || (z_meas<=0.0)
    p_gauss=0.0;
else
    llim = (0.0 - z_true)/gauss_sd;
    ulim = (max_range - z_true)/gauss_sd;
    norm_gauss = 1.0/( calcCDF(ulim) - calcCDF(llim) );				

    p_gauss = norm_gauss * exp( -(z_meas - z_true)*(z_meas - z_true)/(2.0*gauss_sd*gauss_sd) ) ...
                / (gauss_sd*sqrt(2.0*PI));
end

% exp distribution
norm_exp = 1.0 / (1.0 - exp(-lambda_short*z_true));
if (z_meas <= z_true) && (z_meas>=0.0)
    p_short = norm_exp*lambda_short*exp(-lambda_short*z_meas);
else
    p_short = 0.0;
end

% max distribution
if abs(z_meas - max_range)<1e-4
    p_max = 1.0;
else
    p_max=0.0;
end

% random distribution
if (z_meas>=0.0) && z_meas<= max_range
    p_rand = (double) 1.0/max_range;
else
    p_rand=0.0;
end

wt_norm = wt_gauss + wt_short + wt_max + wt_rand;
p_tot = (wt_gauss/wt_norm*p_gauss + wt_short/wt_norm*p_short + wt_max/wt_norm*p_max + wt_rand/wt_norm*p_max);